[{add_op,1,'-'},{atom,1,module},{open,1,'('},{atom,1,db},{close,1,')'},{dot,1,'.'},{nl,1,'\n'},{add_op,2,'-'},{atom,2,export},{open,2,'('},{open_list,2,'['},{atom,2,new},{mul_op,2,'/'},{integer,2,0},{sep,2,','},{atom,2,write},{mul_op,2,'/'},{integer,2,3},{sep,2,','},{atom,2,destroy},{mul_op,2,'/'},{integer,2,1},{sep,2,','},{atom,2,loop},{mul_op,2,'/'},{integer,2,1},{sep,2,','},{atom,2,delete},{mul_op,2,'/'},{integer,2,2},{sep,2,','},{atom,2,read},{mul_op,2,'/'},{integer,2,2},{sep,2,','},{match,2},{mul_op,2,'/'},{integer,2,2},{close_list,2,']'},{close,2,')'},{dot,2,'.'},{nl,3,'\n'},{atom,4,loop},{open,4,'('},{var,4,'List'},{close,4,')'},{arrow,4,'->'},{'receive',6},{open_map,9,'{'},{var,9,'From'},{sep,9,','},{var,9,'DbRef'},{sep,9,','},{atom,9,destroy},{close_map,9,'}'},{arrow,9,'->'},{atom,9,unregister},{open,9,'('},{var,9,'DbRef'},{close,9,')'},{sep,9,','},{var,9,'From'},{send_op,9,'!'},{atom,9,destroyed},{semicolon,9,';'},{'end',13},{dot,13,'.'},{nl,14,'\n'},{atom,15,new},{open,15,'('},{close,15,')'},{arrow,15,'->'},{atom,15,register},{open,15,'('},{atom,15,server},{sep,15,','},{atom,15,spawn},{open,15,'('},{atom,15,db},{sep,15,','},{atom,15,loop},{sep,15,','},{open_list,15,'['},{open_list,15,'['},{close_list,15,']'},{close_list,15,']'},{close,15,')'},{close,15,')'},{sep,15,','},{atom,15,server},{sep,15,','},{atom,15,lists},{colon,15,':'},{atom,16,split},{open,16,'('},{open_list,16,'['},{close_list,16,']'},{close,16,')'},{nl,18,'\n'},{atom,19,destroy},{open,19,'('},{var,19,'DbRef'},{close,19,')'},{arrow,19,'->'},{var,19,'DbRef'},{send_op,19,'!'},{open_map,19,'{'},{atom,19,self},{open,19,'('},{close,19,')'},{sep,19,','},{var,19,'DbRef'},{sep,19,','},{atom,20,destroy},{close_map,20,'}'},{sep,20,','},{'receive',21},{atom,23,destroyed},{arrow,23,'->'},{atom,23,ok},{'end',24},{dot,24,'.'},{nl,24,'\n'},{var,25,'DbRef'},{dot,25,'.'},{nl,26,'\n'},{atom,27,booleanOperators},{open,27,'('},{var,27,'A'},{sep,27,','},{var,27,'B'},{close,27,')'},{arrow,27,'->'},{'if',28},{var,28,'A'},{bool_and,28,'and'},{var,29,'B'},{arrow,29,'->'},{var,29,'A'},{semicolon,29,';'},{var,30,'A'},{bool_or,30,'or'},{var,31,'B'},{arrow,31,'->'},{var,31,'A'},{semicolon,31,';'},{var,32,'A'},{bool_xor,32,'xor'},{var,33,'B'},{arrow,33,'->'},{var,33,'A'},{semicolon,33,';'},{var,34,'A'},{bool_andd,34,andd},{var,35,'B'},{arrow,35,'->'},{var,35,'A'},{semicolon,35,';'},{var,36,'A'},{bool_orr,36,orr},{var,37,'B'},{arrow,37,'->'},{var,37,'A'},{'end',38},{dot,38,'.'},{nl,40,'\n'},{atom,41,arithmeticOperators},{open,41,'('},{var,41,'A'},{sep,41,','},{var,41,'B'},{close,41,')'},{arrow,41,'->'},{var,42,'A'},{add_op,42,'+'},{var,43,'B'},{sep,43,','},{var,44,'A'},{add_op,44,'-'},{var,45,'B'},{sep,45,','},{var,46,'A'},{mul_op,46,'*'},{var,47,'B'},{sep,47,','},{var,48,'A'},{mul_op,48,'/'},{var,49,'B'},{sep,49,','},{var,50,'A'},{mul_op,50,'%'},{var,51,'B'},{sep,51,','},{var,52,'A'},{comp_op,52,'>'},{var,53,'B'},{sep,53,','},{var,54,'A'},{comp_op,54,'<'},{var,55,'B'},{sep,55,','},{var,56,'A'},{comp_op,56,'>='},{var,57,'B'},{sep,57,','},{var,58,'A'},{comp_op,58,'<='},{var,59,'B'},{sep,59,','},{var,60,'A'},{comp_op,60,'=='},{var,61,'B'},{sep,61,','},{var,62,'A'},{assign,62,'='},{var,63,'B'},{sep,63,','},{var,64,'A'},{comp_op,64,is},{var,65,'B'},{sep,65,','},{var,66,'A'},{comp_op,66,'!='},{var,67,'B'},{sep,67,','},{var,68,'A'},{comp_op,68,isnt},{var,69,'B'},{sep,69,','},{var,70,'A'},{coloneq,70,':='},{var,71,'B'},{dot,71,'.'},{nl,72,'\n'},{atom,73,listOperators},{open,73,'('},{open_list,73,'['},{var,73,'A'},{close_list,73,']'},{sep,73,','},{open_list,73,'['},{var,73,'B'},{close_list,73,']'},{sep,73,','},{var,73,'C'},{close,73,')'},{arrow,73,'->'},{open_list,74,'['},{var,74,'A'},{close_list,74,']'},{concat_op,74,'++'},{open_list,75,'['},{var,75,'B'},{close_list,75,']'},{sep,75,','},{open_list,76,'['},{var,76,'A'},{close_list,76,']'},{concat_op,76,'--'},{open_list,77,'['},{var,77,'B'},{close_list,77,']'},{dot,77,'.'},{nl,79,'\n'},{atom,80,delimitersAndOperators},{open,80,'('},{var,80,'A'},{sep,80,','},{var,80,'B'},{close,80,')'},{arrow,80,'->'},{var,81,'A'},{cons_op,81,'::'},{var,82,'B'},{nl,82,'\n'},{var,83,'A'},{open,83,'('},{var,84,'B'},{sep,84,','},{var,85,'A'},{open_list,85,'['},{var,86,'B'},{sep,86,','},{var,87,'A'},{open_map,87,'{'},{var,88,'B'},{sep,88,','},{close,89,')'},{close_list,90,']'},{close_map,91,'}'},{nl,91,'\n'},{var,92,'A'},{arrow,92,'->'},{var,93,'B'},{sep,93,','},{var,94,'A'},{arrowend,94,'->>'},{var,95,'B'},{sep,95,','},{var,96,'A'},{larrow,96,'<-'},{var,97,'B'},{sep,97,','},{var,98,'A'},{larrowend,98,'<<-'},{var,99,'B'},{arrow,100,'->'},{var,101,'B'},{arrowend,102,'->>'},{var,103,'B'},{larrow,104,'<-'},{var,105,'B'},{larrowend,106,'<<-'},{var,107,'B'},{dot,107,'.'},{nl,108,'\n'},{atom,109,binaryOperator},{open,109,'('},{var,109,'A'},{sep,109,','},{var,109,'B'},{close,109,')'},{arrow,109,'->'},{var,110,'A'},{bin_shift,110,'<<'},{var,111,'B'},{sep,111,','},{var,112,'A'},{bin_shift,112,'>>'},{var,113,'B'},{sep,113,','},{var,114,'A'},{bin_and,114,'&'},{var,115,'B'},{sep,115,','},{var,116,'A'},{bin_or,116,'|'},{var,117,'B'},{sep,117,','},{var,118,'A'},{bin_or,118,'^'},{var,119,'B'},{dot,119,'.'},{nl,120,'\n'},{atom,121,reservedWord},{open,121,'('},{var,121,'A'},{close,121,')'},{arrow,121,'->'},{'try',122},{'catch',123},{'after',124},{'receive',125},{'begin',126},{'when',127},{fn,128},{fn,129},{var,129,'A'},{fn,130},{atom,130,atom},{def,131},{atom,131,a},{dot,132,'.'},{nl,133,'\n'},{atom,134,otherWords},{open,134,'('},{var,134,'A'},{close,134,')'},{arrow,134,'->'},{var,135,'A'},{'case',136},{'end',137}]
